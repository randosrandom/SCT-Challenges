// names
string heatFileName1 = "test_simple_laplacian_u.txt";
string heatFileName2 = "test_simple_laplacian_f.txt";
string meshFileName = "simple_laplacian_mesh.msh";

// Mesh Creation
int n = 32;
mesh Th = square(n, n);
savemesh(Th, meshFileName);

// Parameters Setup
real tmin = 2.01;
real tmax = 4.99;
int nstep = 50;
real dt = (tmax-tmin)/(nstep-1);
int prec = 9;

{ // ofstream scope operator

ofstream file1(heatFileName1);
file1.precision(prec);
file1 << Th.nv << " " << nstep << endl;

ofstream file2(heatFileName2);
file2.precision(prec);
file2 << Th.nv << " " << nstep << endl;

for(int i=0; i<nstep; i++){

	// Forcing Terms
	real t = tmin + dt*i;
	func f = -6*(x+y)*t;
	func g = 1+(x^3+y^3)*t;

	// Fem Spaces
	fespace Vh(Th, P1);
	Vh uh, vh, fh;
	fh = f;

	// Variational formulation
	problem laplace(uh, vh) = 
		int2d(Th)(dx(uh)*dx(vh) + dy(uh)*dy(vh))
		- int2d(Th)(f*vh)
    	+ on(1,2,3,4, uh=g);
	laplace;

  	// Writing on files 
  	for (int j=0; j<uh[].n; j++){
		file1 << uh[][j] << endl;
		file2 << fh[][j] << endl;
	}
	file1 << endl;
	file2 << endl;

	// Post Processing
	// plot(uh, fill=1, value=1, cmm="t="+t);
}

} // end ofstream operator